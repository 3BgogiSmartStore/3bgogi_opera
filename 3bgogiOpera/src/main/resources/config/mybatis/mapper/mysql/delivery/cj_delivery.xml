<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="delivery.cj_delivery">
	
	<resultMap id="deliveryInfoResultMap" type="OrdersVOList">
		<id property="orSerialSpecialNumber" column="or_serial_special_number" javaType="String"/>
		<result property="orBuyerId" column="or_buyer_id" javaType="String"/>
		<result property="orBuyerName" column="or_buyer_name" javaType="String"/>
		<result property="orBuyerAnotherName" column="or_buyer_another_name" javaType="String"/>
		<result property="orBuyerContractNumber1" column="or_buyer_contract_number1" javaType="String"/>
		<result property="orBuyerContractNumber2" column="or_buyer_contract_number2" javaType="String"/>
		<result property="orReceiverName" column="or_receiver_name" javaType="String"/>
		<result property="orReceiverContractNumber1" column="or_receiver_contract_number1" javaType="String"/>
		<result property="orReceiverContractNumber2" column="or_receiver_contract_number2" javaType="String"/>
		<result property="orDeliveryInvoiceNumber" column="or_delivery_invoice_number" javaType="String"/>
		<result property="orShippingAddress" column="or_shipping_address" javaType="String"/>
		<result property="orShippingAddressDetail" column="or_shipping_address_detail" javaType="String"/>
		<result property="orDelivEnter" column="or_deliv_enters" javaType="String"/>
		
		<collection property="orVoList" ofType="OrdersVO">
			<id property="orPk" column="or_pk" javaType="int"/>
			<result property="pmFk" column="pm_fk" javaType="int"/>
			<result property="ssFk" column="ss_fk" javaType="int"/>
			<result property="orProduct" column="or_product" javaType="String"/>
			<result property="orProductType" column="or_product_type" javaType="String"/>
			<result property="orProductOption" column="or_product_option" javaType="String"/>
			<result property="orAmount" column="or_amount" javaType="int"/>
			<result property="orDeliveryMessage" column="or_delivery_message" javaType="String"/>
			<result property="orDeliveryType" column="or_delivery_type" javaType="String"/>
			<result property="orDeliveryCompany" column="or_delivery_company" javaType="String"/>
			<result property="orOrderNumber" column="or_order_number" javaType="String"/>
			<result property="orProductOrderNumber" column="or_product_order_number" javaType="String"/>
			<result property="orProductNumber" column="or_product_number" javaType="String"/>
			<result property="orPaymentPositionType" column="or_payment_position_type" javaType="String"/>
			<result property="orSettlementDay" column="or_settlement_day" javaType="java.sql.Timestamp"/>
			<result property="orProductPrice" column="or_product_price" javaType="int"/>
			<result property="orProductOptionPrice" column="or_product_option_price" javaType="int"/>
			<result property="orDiscountPrice" column="or_discount_price" javaType="int"/>
			<result property="orTotalPrice" column="or_total_price" javaType="int"/>
			<result property="orTotalCost" column="or_total_cost" javaType="int"/>
			<result property="orCheckDay" column="or_check_day" javaType="java.sql.Date"/>
			<result property="orSendingDeadline" column="or_sending_deadline" javaType="java.sql.Date"/>
			<result property="orSendingDay" column="or_sending_day" javaType="java.sql.Date"/>
			<result property="orDeliveryChargeType" column="or_delivery_charge_type" javaType="String"/>
			<result property="orDeliveryNumber" column="or_delivery_number" javaType="String"/>
			<result property="orDeliveryPrice" column="or_delivery_price" javaType="int"/>
			<result property="orDelivEnter" column="or_deliv_enter" javaType="String"/>
			<result property="orShippingAddressNumber" column="or_shipping_address_number" javaType="String"/>
			<result property="orShippingProvince" column="or_shipping_province" javaType="String"/>
			<result property="orSpecialRegionDetail" column="or_special_region_detail" javaType="boolean"/>
			<result property="orSendingAddress" column="or_sending_address" javaType="String"/>
			<result property="orPaymentType" column="or_payment_type" javaType="String"/>
			<result property="orPaymentCommision" column="or_payment_commision" javaType="int"/>
			<result property="orAnotherPaymentCommision" column="or_another_payment_commision" javaType="int"/>
			<result property="orInflowRoute" column="or_inflow_route" javaType="String"/>
			<result property="orRequest" column="or_request" javaType="String"/>
			<result property="orTaxFlag" column="or_tax_flag" javaType="boolean"/>
			<result property="orDevideFlag" column="or_devide_flag" javaType="boolean"/>
			<result property="orRegdate" column="or_regdate" javaType="java.sql.Timestamp"/>
			<result property="productMatchingChecking" column="product_matching_checking" javaType="boolean"/>
			<result property="optionMatchingChecking" column="option_matching_checking" javaType="boolean"/>
			<result property="productChecking" column="product_checking" javaType="boolean"/>
			<result property="orCancledFlag" column="or_cancled_flag" javaType="boolean"/>
			<result property="orInvFlag" column="or_Inv_flag" javaType="boolean"/>
			<result property="orDeliveryMessage" column="or_delivery_message" javaType="String"/>
			<!-- or_pk 를 리스트 형태로 가져옴 -->
			<result property="orUserColumn1" column="or_user_column1" javaType="String"/>
			
			<!-- 상품명 매칭 -->
			<collection property="productMatchingVOList" ofType="ProductMatchingVO">
				<id property="pmPk" column="pm_pk" javaType="int"/>
				<!-- <result property="productPk" column="product_pk" javaType="int"/> -->
				<result property="pmStoreProductName" column="pm_store_product_name" javaType="String"/>
				<result property="pmEachFlag" column="pm_each_flag" javaType="boolean"/>
				<result property="pmEachs" column="pm_eachs" javaType="int"/>
				<result property="pmRegdate" column="pm_regdate" javaType="java.sql.Timestamp"/>
				
				<!-- <collection property="productsVOList" ofType="ProductsVO">
					<id property="productPk" column="product_pk" javaType="int"/>
					<result property="cfFk" column="cf_fk" javaType="int"/>
					<result property="productName" column="product_name" javaType="String"/>
					<result property="productFlag" column="product_flag" javaType="boolean"/>
				</collection> -->
				
				<!-- 옵션명 매칭 -->
				<collection property="optionMatchingVOList" ofType="OptionMatchingVO">
					<id property="omPk" column="om_pk" javaType="int"/>
					<result property="pmFk" column="pm_fk" javaType="int"/>
					<result property="optionFk" column="option_fk" javaType="int"/>
					<result property="omStoreOptionName" column="om_store_option_name" javaType="String"/>
					<result property="omOptionAmount" column="om_option_amount" javaType="int"/>
					<result property="omOptionMultipleFlag" column="om_option_multiple_flag" javaType="boolean"/>
					<result property="omOptionMultipleEach" column="om_option_multiple_each" javaType="int"/>
					<result property="omOptionMultipleAmount" column="om_option_multiple_amount" javaType="int"/>
					<result property="omCombineFlag" column="om_combine_flag" javaType="boolean"/>
					<result property="omRegdate" column="om_regdate" javaType="java.sql.Timestamp"/>
					
					<!-- <collection property="optionsVOList" ofType="OptionsVO">
						<id property="optionPk" column="option_pk" javaType="int"/>
						<result property="optionName" column="option_name" javaType="String"/>
				
					</collection> -->
					
					<collection property="productOptionList" ofType="ProductOptionVO">
						<id property="optionPk" column="option_pk" javaType="int"/>
						<result property="optionName" column="option_name" javaType="String"/>
						<!-- cfFk로 수량 가져옴  -->
						<result property="cfFk" column="cf_fk" javaType="int"/>
						<result property="productPk" column="product_pk" javaType="int"/>
						<result property="productName" column="product_name" javaType="String"/>
						<result property="productFlag" column="product_flag" javaType="boolean"/>
					</collection>
					
				</collection>
				
			</collection>
			
		</collection>
	</resultMap>
	
	<resultMap id="renewalDeliveryInfoResultMap" type="OrdersVO">
		<id property="orSerialSpecialNumber" column="or_serial_special_number" javaType="String"/>
		<result property="ssName" column="ss_name" javaType="String"/>
		<result property="orBuyerName" column="or_buyer_name" javaType="String"/>
		<result property="orBuyerAnotherName" column="or_buyer_another_name" javaType="String"/>
		<result property="orBuyerContractNumber1" column="or_buyer_contract_number1" javaType="String"/>
		<result property="orBuyerContractNumber2" column="or_buyer_contract_number2" javaType="String"/>
		<result property="orReceiverName" column="or_receiver_name" javaType="String"/>
		<result property="orReceiverContractNumber1" column="or_receiver_contract_number1" javaType="String"/>
		<result property="orReceiverContractNumber2" column="or_receiver_contract_number2" javaType="String"/>
		<result property="orShippingAddressNumber" column="or_shipping_address_number" javaType="String"/>
		<result property="orShippingAddress" column="or_shipping_address" javaType="String"/>
		<result property="orShippingAddressDetail" column="or_shipping_address_detail" javaType="String"/>
		<result property="orSendingAddress" column="or_sending_address" javaType="String"/>
		<result property="orUserColumn7" column="or_user_column7" javaType="String"/>
		<result property="orDeliveryInvoiceNumber" column="or_delivery_invoice_number" javaType="String"/>
		<result property="regiNo" column="regi_no" javaType="String"/>
		<!-- <collection property="orProductList" column="or_pk" ofType="String" javaType="java.util.List"/>	 -->	
			
			<collection property="productOptionList" ofType="ProductOptionVO">
				<result property="anotherOptionPk" column="or_pk" javaType="int"/>
				<result property="optionPk" column="option_pk" javaType="int"/>
				<result property="optionMemo1" column="or_user_column4" javaType="String"/>
				<result property="optionMemo2" column="or_user_column5" javaType="String"/>
				<!--
					<result property="productPk" column="or_pk" javaType="int"/>  
				 -->
				<result property="optionName" column="option_name" javaType="String"/>
				<!-- another_option_qty 로 수량 가져옴  -->
				<result property="anotherOptionQty" column="another_option_qty" javaType="int"/>
				<result property="productName" column="product_name" javaType="String"/>
				<result property="productFlag" column="product_flag" javaType="boolean"/>
				<result property="prodSorting" column="eos_deliv_seq" javaType="int"/>
			</collection>
	</resultMap>
	
	<select id="selectDontGrantCjDelivOrderListInMonthCounting" parameterType="OrderSearchVO" resultType="int">
		SELECT
			COUNT(out_or.or_serial_special_number)
		FROM(
			SELECT
				output.or_serial_special_number,
				SUM(output.serial_count) AS total_count,
				output.total_flag,
				output.deposit_flag
			FROM
			(
				SELECT
					od.or_serial_special_number,
					COUNT(od.or_serial_special_number) AS serial_count,
					SUM(od.or_inv_flag) AS total_flag,
					SUM(od.or_deposit_flag) AS deposit_flag,
					SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT od.or_user_column4 separator ','), ',', 1) AS or_deliv_enters
				FROM
					orders od
					INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
					LEFT JOIN product_matching pm ON od.pm_fk = pm.pm_pk
					LEFT JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
					LEFT JOIN options op ON om.option_fk = op.option_pk
					LEFT JOIN options_costs_matching ocm ON ocm.option_fk = op.option_pk
					LEFT JOIN products pro ON pro.product_pk = op.product_fk
					
					<trim prefix="WHERE" prefixOverrides="AND |OR ">
						 od.or_refunds = 0
						 AND od.or_abs_deliv_type = 0
						 AND od.or_delivery_invoice_number IS NULL
						 AND od.or_rec_type = 0
						<if test="orSerialSpecialNumberList != null and orSerialSpecialNumberList.size() != 0">
							AND od.or_serial_special_number IN 
							<foreach collection="orSerialSpecialNumberList" item="item" open="(" close=")"  separator=",">
						        #{item}
						    </foreach>
						</if>
						<![CDATA[
							AND od.or_sending_deadline >= #{dateStart}
							AND od.or_sending_deadline <= #{dateEnd}
						]]>
						<if test="ssPk != 0">
							AND od.ss_fk = #{ssPk}
						</if>
						<if test="insertingCount != null and !insertingCount.equals('')">
							AND od.or_regdate = #{insertingCount}
						</if>
						<if test="specialRegionFlag == 1">
							AND or_special_region_flag = 1
							AND or_special_region_check_flag = 1
						</if>
						<if test="specialRegionFlag == 2">
							AND or_special_region_flag = 1
							AND or_special_region_check_flag = 0
						</if>
					    <![CDATA[
							 AND od.or_cancled_flag = 0
							 AND od.or_excel_div_flag = 0
						]]>
						<if test="delivMsgFlag == 1">
						 	AND ( (od.or_user_column4 IS NOT NULL AND od.or_user_column4 != '') OR (od.or_delivery_message IS NOT NULL AND or_delivery_message != ''))
						 </if>
					</trim>
				GROUP BY
					od.or_serial_special_number
				) output
				
			GROUP BY
				output.or_serial_special_number
			HAVING
				total_count = output.total_flag
				AND total_count = output.deposit_flag
				
		) out_or
	

	</select>
	
	<select id="selectDontGrantCjDelivOrderListInMonth" parameterType="OrderSearchVO" resultMap="deliveryInfoResultMap">
		SELECT
			datas.*
		FROM
            (
            SELECT
				od.or_serial_special_number,
				od.or_user_column1,
				od.or_pk,
				od.ss_fk,
				ss.ss_name,
				od.or_product_option,
				od.or_product,
				od.or_buyer_name,
				od.or_buyer_contract_number1,
				od.or_receiver_name,
				od.or_receiver_contract_number1,
				od.or_delivery_invoice_number,
				od.or_shipping_address,
				od.or_shipping_address_detail,
				od.or_order_number,
				od.or_product_order_number,
				od.or_product_number,
				od.or_sending_deadline,
				od.or_delivery_message,
				od.or_settlement_day,
                SUM(od.or_inv_flag) AS or_inv_flag,
				SUM(od.or_total_price) AS or_total_price,
				SUM(od.or_total_cost) AS or_total_cost,
	            pm.pm_pk,
				pro.product_pk,
                pro.product_name,
				om.om_pk,
				op.option_pk,
                op.option_name,
                op.option_cost_flag,
                SUM(od.or_amount * om.om_option_amount) AS cf_fk,
                SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT od.or_user_column4 separator ','), ',', 1) AS or_deliv_enters
                
			FROM
				orders od
				INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
				INNER JOIN product_matching pm ON od.pm_fk = pm.pm_pk
				INNER JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
				INNER JOIN options op ON om.option_fk = op.option_pk
				INNER JOIN products pro ON pro.product_pk = op.product_fk
				INNER JOIN excel_order_seq eo ON op.eo_fk = eo.eos_pk
				
			WHERE
				<![CDATA[
					od.or_sending_deadline >= #{dateStart}
					AND od.or_sending_deadline <= #{dateEnd}
					
				]]>
				AND od.or_delivery_invoice_number IS  NULL
				AND od.or_abs_deliv_type = 0
				AND od.or_excel_div_flag = 0
				AND od.or_cancled_flag = 0
				AND od.or_refunds = 0
				AND od.or_rec_type = 0
			GROUP BY
				od.or_user_column1,
				od.or_serial_special_number,
				od.or_pk,
				od.ss_fk,
				od.or_product_option,
				od.or_product,
				od.or_product_option,
				od.or_buyer_name,
				od.or_buyer_contract_number1,
				od.or_receiver_name,
				od.or_receiver_contract_number1,
				od.or_delivery_invoice_number,
				od.or_order_number,
				od.or_product_order_number,
				od.or_product_number,
				od.or_sending_deadline,
				od.or_delivery_message,
				od.or_settlement_day,
	            pm.pm_pk,
	            om.om_pk,
				pro.product_pk,
                pro.product_name,
				op.option_pk,
                op.option_cost_flag,
                op.option_name
			) datas,
            (
			SELECT
				output.or_serial_special_number
			FROM
				(
				SELECT
					od.or_serial_special_number,
					COUNT(od.or_serial_special_number) AS serial_count,
					SUM(od.or_inv_flag) AS total_flag,
					SUM(od.or_deposit_flag) AS total_deposit,
					SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT od.or_user_column4 separator ','), ',', 1) AS or_deliv_enters
				FROM
					orders od
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
					od.or_refunds = 0
					AND or_abs_deliv_type = 0
					AND od.or_delivery_invoice_number IS NULL
					AND od.or_rec_type = 0
					<if test="orSerialSpecialNumberList != null and orSerialSpecialNumberList.size() != 0">
						AND od.or_serial_special_number IN 
						<foreach collection="orSerialSpecialNumberList" item="item" open="(" close=")"  separator=",">
					        #{item}
					    </foreach>
					</if>
					<![CDATA[
						
						AND od.or_sending_deadline >= #{dateStart}
						AND od.or_sending_deadline <= #{dateEnd}
					]]>	
					<if test="ssPk != 0">
						AND od.ss_fk = #{ssPk}
					</if>
					<if test="insertingCount != null and !insertingCount.equals('')">
						AND od.or_regdate = #{insertingCount}
					</if>
					<!-- 검색 부분 -->
					<if test="specialRegionFlag == 1">
						AND or_special_region_flag = 1
						AND or_special_region_check_flag = 1
					</if>
					<if test="specialRegionFlag == 2">
						AND or_special_region_flag = 1
						AND or_special_region_check_flag = 0
					</if>
		            <![CDATA[
						AND od.or_cancled_flag = 0
						AND od.or_excel_div_flag = 0
					 ]]>
					 <if test="delivMsgFlag == 1">
					 	AND ( (od.or_user_column4 IS NOT NULL AND od.or_user_column4 != '') OR (od.or_delivery_message IS NOT NULL AND or_delivery_message != ''))
					 </if>
				</trim>
				GROUP BY
					od.or_serial_special_number
				ORDER BY 
					od.or_serial_special_number ASC
				) output
			WHERE
				output.serial_count = output.total_flag
				AND output.serial_count = output.total_deposit
			GROUP BY
				output.or_serial_special_number
			LIMIT #{firstRecordIndex}, #{recordCountPerPage} 
            ) SELECTER
		WHERE
			datas.or_serial_special_number = SELECTER.or_serial_special_number
		ORDER BY
<!-- 			datas.or_deliv_enters DESC, -->
<!-- 			datas.product_name DESC, -->
<!-- 			datas.option_name DESC, -->
			datas.or_user_column1 desc,
			datas.or_settlement_day asc
	</select>
	
	<select id="selectCjDeliveryTargetChecking" resultType="OrdersVO">
		SELECT
			datas.*
		FROM
            (
            SELECT
				od.or_serial_special_number,
				od.or_user_column1,
				od.or_shipping_address,
				od.or_settlement_day,
				od.or_shipping_address_number,
				od.or_shipping_address_detail
                
			FROM
				orders od
				INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
				INNER JOIN product_matching pm ON od.pm_fk = pm.pm_pk
				INNER JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
				INNER JOIN options op ON om.option_fk = op.option_pk
				INNER JOIN products pro ON pro.product_pk = op.product_fk
				INNER JOIN excel_order_seq eo ON op.eo_fk = eo.eos_pk
				
			WHERE
				<![CDATA[
					od.or_sending_deadline >= #{dateStart} AND od.or_sending_deadline <= #{dateEnd}
				]]>
				AND od.or_delivery_invoice_number IS NULL
				AND od.or_excel_div_flag = 0
				AND od.or_cancled_flag = 0
				AND od.or_refunds = 0
				AND od.or_abs_deliv_type = 0
				AND od.or_rec_type = 0
			GROUP BY
				od.or_serial_special_number,
				od.or_user_column1,
				od.or_shipping_address,
				od.or_settlement_day,
				od.or_shipping_address_number,
				od.or_shipping_address_detail
			) datas,
            (
			SELECT
				output.or_serial_special_number
			FROM
				(
				SELECT
					od.or_serial_special_number,
					COUNT(od.or_serial_special_number) AS serial_count,
					SUM(od.or_inv_flag) AS total_flag,
					SUM(od.or_deposit_flag) AS total_deposit,
					SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT od.or_user_column4 separator ','), ',', 1) AS or_deliv_enters
				FROM
					orders od
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
					od.or_refunds = 0
					AND od.or_abs_deliv_type = 0
					AND od.or_delivery_invoice_number IS NULL
					AND od.or_rec_type = 0
					<![CDATA[
						AND od.or_sending_deadline >= #{dateStart} AND od.or_sending_deadline <= #{dateEnd}
					]]>	
					<if test="ssPk != 0">
						AND od.ss_fk = #{ssPk}
					</if>
					<if test="insertingCount != null and !insertingCount.equals('')">
						AND od.or_regdate = #{insertingCount}
					</if>
					<!-- 검색 부분 -->
					<if test="specialRegionFlag == 1">
						AND or_special_region_flag = 1
						AND or_special_region_check_flag = 1
					</if>
					<if test="specialRegionFlag == 2">
						AND or_special_region_flag = 1
						AND or_special_region_check_flag = 0
					</if>
		            <![CDATA[
						AND od.or_cancled_flag = 0
						AND od.or_excel_div_flag = 0
					 ]]>
				</trim>
				GROUP BY
					od.or_serial_special_number
				ORDER BY 
					od.or_serial_special_number ASC
				) output
			WHERE
				output.serial_count = output.total_flag
				AND output.serial_count = output.total_deposit
			GROUP BY
				output.or_serial_special_number
            ) SELECTER
		WHERE
			datas.or_serial_special_number = SELECTER.or_serial_special_number
		ORDER BY
<!-- 			datas.or_deliv_enters DESC, -->
<!-- 			datas.product_name DESC, -->
<!-- 			datas.option_name DESC, -->
			datas.or_user_column1 desc,
			datas.or_settlement_day asc
	</select>
	
	
	<!-- 송장 가입력 상태로 둠 -->
	<update id="updateCjDeliveryTargetBeforeGrantInvoiceNum" parameterType="OrdersVO">
		UPDATE
			orders
		SET
			or_delivery_company = 'CJ대한통운',
			or_delivery_invoice_number = '입력전',
			regi_no = '입력전',
			or_invoice_num_date = #{orUserColumn7},
			edt_fk = 5
		WHERE
			or_delivery_invoice_number IS NULL
			AND or_cancled_flag = 0
			AND or_refunds = 0
			AND	or_pk IN 
			<foreach collection="productOptionList" item="items"  open="(" close=")"  separator=",">
					#{items.anotherOptionPk}
			</foreach>
	</update>
	
	
	<!-- primary key 값으로 송장부여 -->
	<update id="grantCjDeliveryInvoiceNumByOrPk" parameterType="OrderSearchVO">
		UPDATE
			orders
		SET
			or_delivery_invoice_number = #{orDeliveryInvoiceNumber}
		WHERE
			or_pk = #{orPk}
	</update>
	
	
	<!-- 별도의 묶음번호를 기준으로 송장부여 : priamry key 값으로 송장부여가 불가능할 경우에 사용할 수 있도록 함 -->
	<update id="grantCjDeliveryInvoiceNumBySerialSpecialNumber" parameterType="OrdersVO">
		UPDATE
			orders
		SET
			or_delivery_invoice_number = #{orDeliveryInvoiceNumber},
			regi_no = #{orDeliveryInvoiceNumber},
			or_delivery_company = 'CJ대한통운',
			edt_fk = 5
		WHERE
			or_serial_special_number = #{orSerialSpecialNumber}
			<![CDATA[
				AND or_sending_deadline >= DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -21 DAY), '%Y-%m-%d')
			]]>
	</update>
	
	
	<!-- cj 엑셀 파일로 만들기 위한 정보 나열 -->
	<select id="selectCjDeliveryExcelTarget" parameterType="OrderSearchVO" resultMap="renewalDeliveryInfoResultMap">
		SELECT
			eos.eos_deliv_seq,
			od.or_pk,
			od.or_user_column4,
			od.or_receiver_name,
			od.or_receiver_contract_number1,
			IF(od.or_shipping_address_detail IS NULL OR od.or_shipping_address_detail = '',
				or_shipping_address,
                CONCAT(od.or_shipping_address, ' ', od.or_shipping_address_detail)
            ) AS or_shipping_address,
            IF(
				or_request IS NOT NULL AND or_request != '',
                CONCAT('[ 요청사항 : ',od.or_request, ' ] ', pro.product_name, ' [ ', op.option_name, ' ] ', (od.or_amount * om.om_option_amount), ' 개'),
                CONCAT(pro.product_name, ' [ ', op.option_name, ' ] ', (od.or_amount * om.om_option_amount), ' 개')
            )  AS product_name,
			od.or_delivery_message AS or_user_column5,
			'1',
			od.or_serial_special_number,
			DATE_FORMAT(now(), '%Y-%m-%d %H:%i:%s') AS or_user_column7
		FROM
			orders od
			INNER JOIN store_section ss ON od.ss_fk = ss.ss_pk
			INNER JOIN product_matching pm ON od.pm_fk = pm.pm_pk
			INNER JOIN option_matching om ON om.pm_fk = pm.pm_pk AND od.or_product_option = om.om_store_option_name
			INNER JOIN options op ON om.option_fk = op.option_pk
			INNER JOIN products pro ON pro.product_pk = op.product_fk
			INNER JOIN excel_order_seq eos ON op.eo_fk = eos.eos_pk
			
		WHERE
			<if test="orSerialSpecialNumberList != null and orSerialSpecialNumberList.size() != 0">
				od.or_serial_special_number IN 
				<foreach collection="orSerialSpecialNumberList" item="item" open="(" close=")"  separator=",">
					#{item}
				</foreach>
			</if>
			AND od.or_delivery_invoice_number IS NULL
			AND od.or_excel_div_flag = 0
			AND od.or_cancled_flag = 0
			AND od.or_refunds = 0
			AND od.or_rec_type = 0
		ORDER BY
			od.or_serial_special_number ASC,
			eos.eos_deliv_seq ASC,
            od.or_delivery_message DESC
	</select>
	
	<select id="selectOrdersPkByOrSerialSpecialNumberForGrantCjInvoiceNum" parameterType="String" resultType="OrdersVO">
		SELECT 
			or_pk,
			or_order_number,
			or_product_order_number,
			or_product,
			or_product_option,
			or_amount,
			or_sending_deadline
		FROM
			orders
		WHERE
			or_serial_special_number = #{orSerialSpecialNumber}
			AND edt_fk = 5
			<![CDATA[
				AND or_sending_deadline >= DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -15 DAY), '%Y-%m-%d')
			]]>
	</select>
</mapper>
